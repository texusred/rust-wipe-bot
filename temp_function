    expressInterest(playerId) {
        return new Promise(async (resolve, reject) => {
            try {
                // Get current active cycle
                const currentCycle = await this.getCurrentCycle();
                if (!currentCycle) {
                    reject(new Error('No active cycle found'));
                    return;
                }

                this.db.run(`
                    INSERT OR REPLACE INTO interest_expressions (player_id, cycle_id)
                    VALUES (?, ?)
                `, [playerId, currentCycle.cycle_id], function(err) {
                    if (err) {
                        reject(err);
                    } else {
                        resolve(this);
                    }
                });
            } catch (error) {
                reject(error);
            }
        });
    }
